version: "3"
services:

  db:
    build:
      context: postgres
      dockerfile: Dockerfile
    networks:
      - database_network
    volumes:
      - ./environment:/var/lib/postgres/environment:ro

  codes:
    build:
      context: django
      dockerfile: Dockerfile
    command: gunicorn codes.wsgi:application --chdir codes/ --bind 0.0.0.0:8000
    volumes:
      - ./codes:/usr/src/app/
    depends_on:
      - db
    networks:
      - database_network
    env_file:
      - environment/codes.env
      - environment/db.env

  verification:
    build:
      context: django
      dockerfile: Dockerfile
    command: gunicorn verification.wsgi:application --chdir verification/ --bind 0.0.0.0:8000
    volumes:
      - ./verification:/usr/src/app/
    depends_on:
      - db
      - codes
    networks:
      - database_network
    env_file:
      - environment/verification.env
      - environment/db.env

  locations:
    build:
      context: django
      dockerfile: Dockerfile
    command: gunicorn locations.wsgi:application --chdir locations/ --bind 0.0.0.0:8000
    volumes:
      - ./locations:/usr/src/app/
    depends_on:
      - db
      - codes
      - verification
    networks:
      - database_network
    env_file:
      - environment/locations.env
      - environment/db.env

  products:
    build:
      context: django
      dockerfile: Dockerfile
    command: gunicorn products.wsgi:application --chdir products/ --bind 0.0.0.0:8000
    volumes:
      - ./products:/usr/src/app/
    depends_on:
      - db
      - codes
      - verification
      - locations
    networks:
      - database_network
    env_file:
      - environment/products.env
      - environment/db.env

  # orders:
  #   build:
  #     context: django
  #     dockerfile: Dockerfile
  #   command: gunicorn orders.wsgi:application --chdir orders/ --bind 0.0.0.0:8000
  #   volumes:
  #     - ./orders:/usr/src/app/
  #   depends_on:
  #     - db
  #   networks:
  #     - database_network
  #   env_file:
  #     - environment/orders.env
  #     - environment/db.env

  web:
    build:
      context: nginx
      dockerfile: Dockerfile
    ports:
        - 8000:80
    depends_on:
      - codes
      - locations
      - verification
      - products
      - db

networks:
  database_network:
    driver: bridge
