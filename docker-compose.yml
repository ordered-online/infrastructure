version: '3'
services:
  db:
    container_name: db
    build:
      context: postgres
      dockerfile: Dockerfile
    networks:
      - database
    volumes:
      - ./environment:/var/lib/postgres/environment:ro

  redis:
    container_name: redis
    build:
      context: redis
      dockerfile: Dockerfile
    networks:
      - websocket
    expose:
      - '6379'

  codes:
    container_name: codes
    build:
      context: django
      dockerfile: Dockerfile
    command: gunicorn codes.wsgi:application --chdir /usr/src/app/codes/ --bind 0.0.0.0:8000
    volumes:
      - ./codes:/usr/src/app/
    depends_on:
      - db
    networks:
      - database
      - api
    env_file:
      - environment/codes.env
      - environment/db.env

  verification:
    container_name: verification
    build:
      context: django
      dockerfile: Dockerfile
    command: gunicorn verification.wsgi:application --chdir /usr/src/app/verification/ --bind 0.0.0.0:8000
    volumes:
      - ./verification:/usr/src/app/
    depends_on:
      - db
      - codes
    networks:
      - database
      - api
    env_file:
      - environment/verification.env
      - environment/db.env

  locations:
    container_name: locations
    build:
      context: django
      dockerfile: Dockerfile
    command: gunicorn locations.wsgi:application --chdir /usr/src/app/locations/ --bind 0.0.0.0:8000
    volumes:
      - ./locations:/usr/src/app/
    depends_on:
      - db
      - codes
      - verification
    networks:
      - database
      - api
    env_file:
      - environment/locations.env
      - environment/db.env

  products:
    container_name: products
    build:
      context: django
      dockerfile: Dockerfile
    command: gunicorn products.wsgi:application --chdir /usr/src/app/products/ --bind 0.0.0.0:8000
    volumes:
      - ./products:/usr/src/app/
    depends_on:
      - db
      - codes
      - verification
      - locations
    networks:
      - database
      - api
    env_file:
      - environment/products.env
      - environment/db.env

  orders:
    container_name: orders
    build:
      context: django
      dockerfile: Dockerfile
    command: daphne -u /tmp/daphne.sock -b 0.0.0.0 -p 8000 orders.asgi:application
    volumes:
      - ./orders/orders:/usr/src/app/
    depends_on:
      - db
      - redis
      - codes
      - locations
      - verification
    networks:
      - database
      - api
      - websocket
    env_file:
      - environment/orders.env
      - environment/db.env

  apps:
    container_name: apps
    build:
      context: node
      dockerfile: Dockerfile
      args:
        NODE_ENV: development
    volumes:
      - ./apps:/usr/src/app/
    depends_on:
      - codes
      - locations
      - verification
      - products
      - orders
    networks:
      - apps

  web:
    container_name: web
    build:
      context: nginx
      dockerfile: Dockerfile
    ports:
      - 80:80
    depends_on:
      - codes
      - locations
      - verification
      - products
      - orders
      - apps
    networks:
      - api
      - apps

networks:
  api:
  database:
  websocket:
  apps:
