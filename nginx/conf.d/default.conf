upstream codes_server {
    server codes:8000;
}

upstream verification_server {
    server verification:8000;
}

upstream locations_server {
    server locations:8000;
}

upstream products_server {
    server products:8000;
}

upstream orders_server {
    server orders:8000;
}

upstream apps_server {
    server apps:5000;
}

server {

    listen      80 default_server;
    listen [::]:80 default_server;
    server_name localhost ordered.online www.ordered.online;

    add_header 'Access-Control-Allow-Origin' '*';
    add_header 'Access-Control-Allow-Credentials' 'true';
    add_header 'Access-Control-Allow-Methods' 'GET, POST';
    # add_header 'Access-Control-Allow-Headers' 'Access-Control-Allow-Orgin,XMLHttpRequest,Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Mx-ReqToken,X-Requested-With';
    add_header 'Access-Control-Allow-Headers' 'Accept,User-Agent,Keep-Alive,Cache-Control,Content-Type';
    add_header 'Access-Control-Max-Age' 1728000;

    # Forward the according urls to the respective service

    location /codes/ {
        proxy_pass http://codes_server/codes/;
        
        include    /etc/nginx/conf.d/proxy.conf;
    }

    location /verification/ {
        proxy_pass http://verification_server/verification/;
        
        include    /etc/nginx/conf.d/proxy.conf;
    }

    location /locations/ {
        proxy_pass http://locations_server/locations/;
        
        include    /etc/nginx/conf.d/proxy.conf;
    }

    location /products/ {
        proxy_pass http://products_server/products/;
        
        include    /etc/nginx/conf.d/proxy.conf;
    }

    # Forward connections prefixed with '/ws/session/' to the order service and upgrade the connection 
    location /ws/session/ {
        proxy_pass http://orders_server;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        include    /etc/nginx/conf.d/proxy.conf;
    }

    location /orders/ {
        proxy_pass http://orders_server/orders/;
        
        include    /etc/nginx/conf.d/proxy.conf;
    }

    location /manager {
        proxy_pass http://apps_server/;
        
        include    /etc/nginx/conf.d/proxy.conf;
    }

    error_page   500 502 503 504  /50x.html;
        location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
